name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Xcode 16.3
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3'
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(ruby -e "require 'json'; puts JSON.parse(ARGF.read)['project']['targets'][0]" <<< "$scheme_list")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=$(xcrun simctl list devices available | grep -m1 'iPhone' | awk -F '[()]' '{print $2}')
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iq '\.xcworkspace$'; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i '\.xcworkspace$')
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i '\.xcodeproj$')
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "id=$device"
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=$(xcrun simctl list devices available | grep -m1 'iPhone' | awk -F '[()]' '{print $2}')
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iq '\.xcworkspace$'; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i '\.xcworkspace$')
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i '\.xcodeproj$')
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "id=$device"
